curl -i -X POST -H "Accept:application/json" -H "Content-Type:application/json" 127.0.0.1:8083/connectors/ --data "@debezium.json"
curl -i -X POST -H "Accept:application/json" -H "Content-Type:application/json" http://localhost:8083/connectors/ --data "@debezium.json"


sudo docker run --tty --network debezium_default confluentinc/cp-kafkacat kafkacat -b kafka:9092 -C -s key=s -s value=avro -r http://schema-registry:8081 -t postgres.public.student
sudo docker run --tty --network debezium_default confluentinc/cp-kafkacat kafkacat -b kafka:9092 -C -s key=s -s value=avro -r http://schema-registry:8081 -t postgres.public.student
sudo docker run --tty --network debezium_default confluentinc/cp-kafkacat kafkacat -b kafka:9092 -t student.public.student

docker exec -it $(docker ps -q -f "ancestor=confluentinc/cp-kafka:latest") kafka-console-consumer --bootstrap-server localhost:9092 --topic postgres.public.student --from-beginning


Data Sink
curl -i -X POST -H "Accept:application/json" -H "Content-Type:application/json" http://localhost:8083/connectors/ --data "@postgres-sink.json"
curl -X POST -H "Accept:application/json" -H "Content-Type: application/json" --data "@postgres-sink.json" http://localhost:8083/connectors

curl -i -X POST -H "Accept:application/json" -H  "Content-Type:application/json" https://localhost:8083/connectors/ -k -d @postgres-sink.json




sudo docker exec -it 380a93d95da6 bash
docker-compose exec -it postgres bash

psql -U docker exampledb -w
CREATE TABLE student (id integer primary key, name varchar);
ALTER TABLE public.student REPLICA IDENTITY FULL;
INSERT INTO student (id, name) VALUES (1, 'Jhon');
SELECT * FROM student LIMIT 100;

sudo docker-compose logs debezium
sudo docker-compose logs kafka-connect|grep kafka-connect-jdbc|more

docker-compose down --remove-orphans

docker-compose logs -f debezium

curl -X GET http://localhost:8083/connectors
curl -X GET http://localhost:8083/connectors/<connector-name>/status

curl -X DELETE http://localhost:8083/connectors/jdbc-sink-connector

sudo docker network ls



